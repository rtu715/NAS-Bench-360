description: darts_cnn_nas

environment:
  image: "renbotu/xd-nas:determined1.8"
  registry_auth:
    username: renbotu
    password: 980715tutubo


data:
  download_dir: /data
  type: s3
  bucket: pde-xd


bind_mounts:
  - host_path: /tmp
    container_path: /data
    read_only: false

min_validation_period:
  epochs: 1

hyperparameters:
  task: spherical
  permute: false

  learning_rate: 
    type: log
    minval: -2.0
    maxval: 0.0
    base: 10.0 
 
  momentum: 
    type: double
    minval: 0.0
    maxval: 0.9

  weight_decay: 
    type: log
    minval: -4.0
    maxval: -2.0
    base: 10.0

  train_epochs: 300
  global_batch_size: 256
  init_channels: 16
  layers: 8
  auxiliary: false
  auxiliary_weight: 0.4
  cutout: false
  cutout_length: 16
  drop_path_prob: 0.0
  clip_gradients_l2_norm: 0

  # Tunable hyperparameters
  # Normal cell
  normal_node1_edge1:
    type: categorical
    vals: [0, 1]
  normal_node1_edge2:
    type: categorical
    vals: [0, 1]
  normal_node2_edge1:
    type: categorical
    vals: [0, 1, 2]
  normal_node2_edge2:
    type: categorical
    vals: [0, 1, 2]
  normal_node3_edge1:
    type: categorical
    vals: [0, 1, 2, 3]
  normal_node3_edge2:
    type: categorical
    vals: [0, 1, 2, 3]
  normal_node4_edge1:
    type: categorical
    vals: [0, 1, 2, 3, 4]
  normal_node4_edge2:
    type: categorical
    vals: [0, 1, 2, 3, 4]
  normal_node1_edge1_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  normal_node1_edge2_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  normal_node2_edge1_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  normal_node2_edge2_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  normal_node3_edge1_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  normal_node3_edge2_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  normal_node4_edge1_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  normal_node4_edge2_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  # Reduce cell
  reduce_node1_edge1:
    type: categorical
    vals: [0, 1]
  reduce_node1_edge2:
    type: categorical
    vals: [0, 1]
  reduce_node2_edge1:
    type: categorical
    vals: [0, 1, 2]
  reduce_node2_edge2:
    type: categorical
    vals: [0, 1, 2]
  reduce_node3_edge1:
    type: categorical
    vals: [0, 1, 2, 3]
  reduce_node3_edge2:
    type: categorical
    vals: [0, 1, 2, 3]
  reduce_node4_edge1:
    type: categorical
    vals: [0, 1, 2, 3, 4]
  reduce_node4_edge2:
    type: categorical
    vals: [0, 1, 2, 3, 4]
  reduce_node1_edge1_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  reduce_node1_edge2_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  reduce_node2_edge1_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  reduce_node2_edge2_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  reduce_node3_edge1_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  reduce_node3_edge2_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  reduce_node4_edge1_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]
  reduce_node4_edge2_op:
    type: categorical
    vals: [max_pool_3x3, avg_pool_3x3, skip_connect, sep_conv_3x3, sep_conv_5x5, dil_conv_3x3, dil_conv_5x5]

resources:
  slots_per_trial: 1
  max_slots: 5

scheduling_unit: 100

records_per_epoch: 60000

searcher:
  name: adaptive_asha
  metric: top1_accuracy
  smaller_is_better: false
  # 50k examples in train, 96 examples per batch, 100 batches per step -> 300 epochs ~ 1562 steps
  max_length:
          epochs: 300
  max_trials: 10000
  mode: aggressive
  # A maximum of 4 rungs corresponds to a minimum training length of 1/divisor^(max_rungs - 1) = 1/64 * max_length 
  # per trial.  Trials with higher validation accuracy will be trained for longer than this minimum will poor
  # trials will be stopped early.
  max_rungs: 4
  max_concurrent_trials: 5

entrypoint: model_def:DARTSCNNTrial

max_restarts: 100
